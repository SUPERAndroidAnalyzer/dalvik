var searchIndex = {};
searchIndex["dalvik"] = {"doc":"Dalvik executable file format parser.","items":[[3,"Dex","dalvik","Dex file representation.",null,null],[12,"header","","",0,null],[12,"strings","","",0,null],[12,"types","","",0,null],[0,"error","","Errors module",null,null],[3,"Error","dalvik::error","The Error type.",null,null],[12,"0","","The kind of the error.",1,null],[12,"1","","Contains the error chain and the backtrace.",1,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",2,null],[13,"Io","","",2,null],[13,"FromUTF8","","",2,null],[13,"IncorrectMagic","","Incorrect dex magic number.",2,null],[13,"HeaderFileSizeMismatch","","Mismatch between file size in header and real file size.",2,null],[13,"InvalidFileSize","","Invalid file size.",2,null],[13,"InvalidEndianTag","","Invalid endian tag.",2,null],[13,"IncorrectHeaderSize","","Incorrect header size.",2,null],[13,"InvalidOffset","","Invalid offset.",2,null],[13,"MismatchedOffsets","","Mismatched offsets.",2,null],[13,"UnknownStringIndex","","Unknown string index.",2,null],[13,"UnknownTypeIndex","","Unknown type index.",2,null],[13,"InvalidTypeDescriptor","","Invalid type descriptor.",2,null],[13,"InvalidShortyType","","Invalid shorty type.",2,null],[13,"InvalidShortyDescriptor","","",2,null],[13,"InvalidAccessFlags","","Invalid access flags.",2,null],[13,"InvalidItemType","","Invalid item type.",2,null],[13,"InvalidVisibility","","Invalid visibility modifier.",2,null],[13,"InvalidValue","","Invalid value.",2,null],[13,"StringSizeMismatch","","String size mismatch.",2,null],[13,"InvalidLeb128","","Invalid uleb128.",2,null],[13,"Header","","Generic header error.",2,null],[13,"Map","","Generic map error.",2,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns *some type that can be converted to `ErrorKind`*, boxes the original error to store as the cause, then returns a new error containing the original error.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",1,null],[11,"with_chain","","",1,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",1,null],[11,"iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"errorchainiter"}}],[11,"backtrace","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"extract_backtrace","","",1,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",1,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",1,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",1,{"inputs":[{"name":"self"}],"output":{"name":"errorchainiter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"header","dalvik","Module containing the Dex file header.",null,null],[3,"Header","dalvik::header","Dex header representantion structure.",null,null],[12,"magic","","",4,null],[12,"checksum","","",4,null],[12,"signature","","",4,null],[12,"file_size","","",4,null],[12,"header_size","","",4,null],[12,"endian_tag","","",4,null],[12,"link_size","","",4,null],[12,"link_offset","","",4,null],[12,"map_offset","","",4,null],[12,"string_ids_size","","",4,null],[12,"string_ids_offset","","",4,null],[12,"type_ids_size","","",4,null],[12,"type_ids_offset","","",4,null],[12,"prototype_ids_size","","",4,null],[12,"prototype_ids_offset","","",4,null],[12,"field_ids_size","","",4,null],[12,"field_ids_offset","","",4,null],[12,"method_ids_size","","",4,null],[12,"method_ids_offset","","",4,null],[12,"class_defs_size","","",4,null],[12,"class_defs_offset","","",4,null],[12,"data_size","","",4,null],[12,"data_offset","","",4,null],[17,"ENDIAN_CONSTANT","","Endianness constant representing little endian file.",null,null],[17,"REVERSE_ENDIAN_CONSTANT","","Endianness constant representing big endian file.",null,null],[11,"from_file","","Obtains the header from a Dex file.",4,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_reader","","Obtains the header from a Dex file reader.",4,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"read_data","","",4,null],[11,"is_magic_valid","","Checks if the dex magic number given is valid.",4,null],[11,"get_magic","","Gets the magic value.",4,null],[11,"get_dex_version","","Gets Dex version.",4,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_checksum","","Gets file checksum.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_signature","","Gets file SHA-1 signature.",4,null],[11,"get_file_size","","Gets file size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_header_size","","Gets header size, in bytes.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_endian_tag","","Gets the endian tag.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_little_endian","","Gets wether the file is in little endian or not.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_big_endian","","Gets wether the file is in big endian or not.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_link_size","","Gets the link section size",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_link_offset","","Gets the link section offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_map_offset","","Gets the map section offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_string_ids_size","","Gets the string IDs list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_string_ids_offset","","Gets the string IDs list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_type_ids_size","","Gets the type IDs list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_type_ids_offset","","Gets the type IDs list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_prototype_ids_size","","Gets the prototype IDs list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_prototype_ids_offset","","Gets the prototype IDs list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_field_ids_size","","Gets the field IDs list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_field_ids_offset","","Gets the field IDs list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_method_ids_size","","Gets the method IDs list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_method_ids_offset","","Gets the method IDs list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_class_defs_size","","Gets the class definition list size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_class_defs_offset","","Gets the class definition list offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_data_size","","Gets the data section size.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_data_offset","","Gets the data secrion offset.",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"types","dalvik","Types module.",null,null],[3,"ShortyDescriptor","dalvik::types","Short form of type descriptor.",null,null],[12,"return_type","","",5,null],[12,"field_types","","",5,null],[3,"Prototype","","Prototype implementation.",null,null],[12,"descriptor","","",6,null],[12,"return_type","","",6,null],[12,"parameters","","",6,null],[3,"Array","","Array.",null,null],[12,"inner","","",7,null],[3,"AnnotationElement","","Annotation element.",null,null],[12,"name","","",8,null],[12,"value","","",8,null],[3,"EncodedAnnotation","","Annotation.",null,null],[12,"type_id","","",9,null],[12,"elements","","",9,null],[3,"Annotation","","Annotation item",null,null],[12,"visibility","","",10,null],[12,"annotation","","",10,null],[3,"AnnotationsDirectory","","Annotations directory.",null,null],[12,"class_annotations","","",11,null],[12,"field_annotations","","",11,null],[12,"method_annotations","","",11,null],[12,"parameter_annotations","","",11,null],[3,"FieldAnnotations","","Field annotations.",null,null],[12,"field_id","","",12,null],[12,"annotations","","",12,null],[3,"MethodAnnotations","","Method annotations.",null,null],[12,"method_id","","",13,null],[12,"annotations","","",13,null],[3,"ParameterAnnotations","","Parameter annotations.",null,null],[12,"method_id","","",14,null],[12,"annotations","","",14,null],[3,"AccessFlags","","Access flags.",null,null],[12,"bits","","",15,null],[3,"Class","","Structure representing a class.",null,null],[12,"class_index","","",16,null],[12,"access_flags","","",16,null],[12,"superclass_index","","",16,null],[12,"interfaces","","",16,null],[12,"source_file_index","","",16,null],[12,"annotations","","",16,null],[12,"class_data","","",16,null],[12,"static_values","","",16,null],[4,"Type","","Basic built-in types.",null,null],[13,"Void","","Void type.",17,null],[13,"Boolean","","Boolean.",17,null],[13,"Byte","","Byte (8 bits).",17,null],[13,"Short","","Short (16 bits).",17,null],[13,"Char","","Char (16 bits).",17,null],[13,"Int","","Int (32 bits).",17,null],[13,"Long","","Long (64 bits).",17,null],[13,"Float","","Float (32 bits).",17,null],[13,"Double","","Double (64 bits).",17,null],[13,"FullyQualifiedName","","Fully qualified named type.",17,null],[13,"Array","","Array.",17,null],[12,"dimensions","dalvik::types::Type","Array dimensions.",17,null],[12,"array_type","","Type of the array.",17,null],[4,"ShortyReturnType","dalvik::types","",null,null],[13,"Void","","",18,null],[13,"Boolean","","",18,null],[13,"Byte","","",18,null],[13,"Short","","",18,null],[13,"Char","","",18,null],[13,"Int","","",18,null],[13,"Long","","",18,null],[13,"Float","","",18,null],[13,"Double","","",18,null],[13,"Reference","","",18,null],[4,"ShortyFieldType","","",null,null],[13,"Boolean","","",19,null],[13,"Byte","","",19,null],[13,"Short","","",19,null],[13,"Char","","",19,null],[13,"Int","","",19,null],[13,"Long","","",19,null],[13,"Float","","",19,null],[13,"Double","","",19,null],[13,"Reference","","",19,null],[4,"Visibility","","Annotation visibility.",null,null],[13,"Build","","Build time visibility.",20,null],[13,"Runtime","","Runtime visibility.",20,null],[13,"System","","System visibility.",20,null],[4,"Value","","Value of a variable.",null,null],[13,"Byte","","Byte.",21,null],[13,"Short","","Short (16 bits).",21,null],[13,"Char","","Char (16 bts).",21,null],[13,"Int","","Int (32 bits).",21,null],[13,"Long","","Long (64 bits).",21,null],[13,"Float","","Float (32 bits).",21,null],[13,"Double","","Double (64 bits).",21,null],[13,"String","","String, with the index into the string IDs list.",21,null],[13,"Type","","Type, with the index into the type IDs list.",21,null],[13,"Field","","Field, with the index into the field IDs list.",21,null],[13,"Method","","Method with the index into the prototype IDs list.",21,null],[13,"Enum","","Enum with the index into the fiels IDs list.",21,null],[13,"Array","","An array of values.",21,null],[13,"Annotation","","Annotation.",21,null],[13,"Null","","Null.",21,null],[13,"Boolean","","Boolean.",21,null],[0,"read","","Types used for reading Dex files.",null,null],[3,"PrototypeIdData","dalvik::types::read","Data structure representing the `proto_id_item` type.",null,null],[12,"shorty_index","","",22,null],[12,"return_type_index","","",22,null],[12,"parameters_offset","","",22,null],[3,"FieldIdData","","Structure representing the `field_id_item` type.",null,null],[12,"class_index","","",23,null],[12,"type_index","","",23,null],[12,"name_index","","",23,null],[3,"MethodIdData","","Structure representing the `method_id_item` type.",null,null],[12,"class_index","","",24,null],[12,"prototype_index","","",24,null],[12,"name_index","","",24,null],[3,"ClassDefData","","Data of a class definition.",null,null],[12,"class_index","","",25,null],[12,"access_flags","","",25,null],[12,"superclass_index","","",25,null],[12,"interfaces_offset","","",25,null],[12,"source_file_index","","",25,null],[12,"annotations_offset","","",25,null],[12,"class_data_offset","","",25,null],[12,"static_values_offset","","",25,null],[3,"FieldAnnotationsOffset","","List of offsets to field annotations.",null,null],[12,"field_id","","",26,null],[12,"offset","","",26,null],[3,"MethodAnnotationsOffset","","List of offsets to method annotations.",null,null],[12,"method_id","","",27,null],[12,"offset","","",27,null],[3,"ParameterAnnotationsOffset","","List of offset to parameter annotations.",null,null],[12,"method_id","","",28,null],[12,"offset","","",28,null],[3,"AnnotationsDirectoryOffsets","","Ofsets of the annotations in the annotations directory.",null,null],[12,"class_annotations_offset","","",29,null],[12,"field_annotations","","",29,null],[12,"method_annotations","","",29,null],[12,"parameter_annotations","","",29,null],[3,"Field","","",null,null],[12,"field_id","","",30,null],[12,"access_flags","","",30,null],[3,"Method","","",null,null],[12,"method_id","","",31,null],[12,"access_flags","","",31,null],[12,"code_offset","","",31,null],[3,"ClassData","","Class data structure.",null,null],[12,"static_fields","","",32,null],[12,"instance_fields","","",32,null],[12,"direct_methods","","",32,null],[12,"virtual_methods","","",32,null],[3,"DebugInfo","","Debug information structure.",null,null],[12,"line_start","","",33,null],[12,"parameter_names","","",33,null],[12,"bytecode","","",33,null],[3,"DebugBytecode","","Debug bytecode.",null,null],[12,"bytecode","","",34,null],[3,"CodeItem","","Code Item structure",null,null],[12,"registers_size","","",35,null],[12,"ins_size","","",35,null],[12,"outs_size","","",35,null],[12,"debug_info_offset","","",35,null],[12,"insns","","",35,null],[12,"tries","","",35,null],[12,"handlers","","",35,null],[3,"TryItem","","Try item structure.",null,null],[12,"start_address","","",36,null],[12,"insn_count","","",36,null],[12,"handler_offset","","",36,null],[3,"CatchHandler","","Struct representing a catch handler.",null,null],[12,"handlers","","",37,null],[12,"catch_all_addr","","",37,null],[3,"HandlerInfo","","",null,null],[12,"type_id","","",38,null],[12,"addr","","",38,null],[4,"DebugInstruction","","Debug state machine instruction.",null,null],[13,"EndSequence","","",39,null],[13,"AdvancePc","","",39,null],[12,"addr_diff","dalvik::types::read::DebugInstruction","",39,null],[13,"AdvanceLine","dalvik::types::read","",39,null],[12,"line_diff","dalvik::types::read::DebugInstruction","",39,null],[13,"StartLocal","dalvik::types::read","",39,null],[12,"register_num","dalvik::types::read::DebugInstruction","",39,null],[12,"name_id","","",39,null],[12,"type_id","","",39,null],[13,"StartLocalExtended","dalvik::types::read","",39,null],[12,"register_num","dalvik::types::read::DebugInstruction","",39,null],[12,"name_id","","",39,null],[12,"type_id","","",39,null],[12,"sig_id","","",39,null],[13,"EndLocal","dalvik::types::read","",39,null],[12,"register_num","dalvik::types::read::DebugInstruction","",39,null],[13,"RestartLocal","dalvik::types::read","",39,null],[12,"register_num","dalvik::types::read::DebugInstruction","",39,null],[13,"SetPrologueEnd","dalvik::types::read","",39,null],[13,"SetEpilogueBegin","","",39,null],[13,"SetFile","","",39,null],[12,"name_id","dalvik::types::read::DebugInstruction","",39,null],[13,"SpecialOpcode","dalvik::types::read","",39,null],[12,"opcode","dalvik::types::read::DebugInstruction","",39,null],[17,"NO_INDEX","dalvik::types::read","",null,null],[17,"VISIBILITY_BUILD","","Build visibility.",null,null],[17,"VISIBILITY_RUNTIME","","Runtime visibility.",null,null],[17,"VISIBILITY_SYSTEM","","System visibility.",null,null],[17,"VALUE_BYTE","","",null,null],[17,"VALUE_SHORT","","",null,null],[17,"VALUE_CHAR","","",null,null],[17,"VALUE_INT","","",null,null],[17,"VALUE_LONG","","",null,null],[17,"VALUE_FLOAT","","",null,null],[17,"VALUE_DOUBLE","","",null,null],[17,"VALUE_METHOD_TYPE","","",null,null],[17,"VALUE_METHOD_HANDLE","","",null,null],[17,"VALUE_STRING","","",null,null],[17,"VALUE_TYPE","","",null,null],[17,"VALUE_FIELD","","",null,null],[17,"VALUE_METHOD","","",null,null],[17,"VALUE_ENUM","","",null,null],[17,"VALUE_ARRAY","","",null,null],[17,"VALUE_ANNOTATION","","",null,null],[17,"VALUE_NULL","","",null,null],[17,"VALUE_BOOLEAN","","",null,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new `PrototypeIdData` from a reader.",22,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"shorty_index","","Gets the shorty index.",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"return_type_index","","Gets the return type index.",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"parameters_offset","","Gets the parameter list offset, if the prototype has parameters.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new `FieldIdData` from a reader.",23,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"class_index","","Gets the index of the class of the field.",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"type_index","","Gets the index of the type of the class.",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name_index","","Gets the index to the name of this field.",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new `MethodIdData` from a reader.",24,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"class_index","","Gets the index of the class of the field.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"prototype_index","","Gets the index of the prototype of the class.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name_index","","Gets the index to the name of this field.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new `ClassDefData` from a reader.",25,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"class_index","","Gets the index in the *Type IDs* list of the class.",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"access_flags","","Gets the access flags of the class definition.",25,{"inputs":[{"name":"self"}],"output":{"name":"accessflags"}}],[11,"superclass_index","","Gets the index in the *Type IDs* list of the superclass of this class, if it exists.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"interfaces_offset","","Gets the offset of the list of interfaces implemented by the class, if it has any.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"source_file_index","","Gets the index in the *String IDs* list of the file name where most of the class was, if it exists.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"annotations_offset","","Gets the offset of the annotations of the class, if it has any.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"class_data_offset","","Gets the offset for the data of the class, if it has any.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"static_values_offset","","Gets the offset for the static values of the class, if it has any.",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_u8","dalvik::types","",20,{"inputs":[{"name":"u8"}],"output":{"name":"result"}}],[11,"from_reader","","",21,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"read_u32","","",21,{"inputs":[{"name":"r"},{"name":"u8"}],"output":{"name":"result"}}],[11,"from_reader","","Creates an array from a reader.",7,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"from_reader","","Creates an annotation from a reader.",9,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new annotation item from a reader.",10,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","dalvik::types::read","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"field_index","","Gets the index of the field with annotations in the *Field IDs* list.",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offset","","Gets the offset of the annotations of the field.",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"method_index","","Gets the index of the method with annotations in the *Method IDs* list.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offset","","Gets the offset of the annotations of the method.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"method_index","","Gets the index of the method with annotations in the *Method IDs* list.",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offset","","Gets the offset of the annotations of the method.",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new annotations directory from a reader.",29,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"class_annotations_offset","","Gets the class annotations offset, if they exist.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"field_annotations","","Gets the field annotations.",29,null],[11,"method_annotations","","Gets the method annotations.",29,null],[11,"parameter_annotations","","Gets the parameter annotations.",29,null],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new class data structure from a reader.",32,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"read_fields","","",32,{"inputs":[{"name":"r"},{"name":"u32"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_methods","","",32,{"inputs":[{"name":"r"},{"name":"u32"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a new debug information structure from a reader.",33,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"line_start","","Gets the starting line of the debug information.",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"parameter_names","","Gets the list of IDs of parameter names affected by the debug information structure in the string list.",33,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Reads the debug bytecode from a reader.",34,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"debuginstruction"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"debuginstruction"}],"output":{"name":"bool"}}],[11,"assert_receiver_is_total_eq","","",39,null],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"debuginstruction"}}],[11,"from_reader","","",39,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Reads a code item from the given reader.",35,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a try item structure from a reader.",36,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Reads a catch handler from a reader.",37,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Creates a handler information structure from a reader object.",38,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[17,"ACC_PUBLIC","dalvik::types","Public access.",null,null],[17,"ACC_PRIVATE","","Private access.",null,null],[17,"ACC_PROTECTED","","Protected access.",null,null],[17,"ACC_STATIC","","Static access.",null,null],[17,"ACC_FINAL","","Final element (non modifiable).",null,null],[17,"ACC_SYNCHRONIZED","","Thread - synchronized element.",null,null],[17,"ACC_VOLATILE","","Volatile element.",null,null],[17,"ACC_BRIDGE","","Bridge.",null,null],[17,"ACC_TRANSIENT","","Transient.",null,null],[17,"ACC_VARARGS","","Varargs.",null,null],[17,"ACC_NATIVE","","Native element.",null,null],[17,"ACC_INTERFACE","","Interface.",null,null],[17,"ACC_ABSTRACT","","Abstract element.",null,null],[17,"ACC_STRICT","","Strict.",null,null],[17,"ACC_SYNTHETIC","","Syntetic.",null,null],[17,"ACC_ANNOTATION","","Annotation.",null,null],[17,"ACC_ENUM","","Enum.",null,null],[17,"ACC_CONSTRUCTOR","","Constructor.",null,null],[17,"ACC_DECLARED_SYNCHRONIZED","","Declared as synchronized element.",null,null],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"shortyreturntype"}}],[11,"from_char","","",18,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[11,"from","","",18,{"inputs":[{"name":"type"}],"output":{"name":"shortyreturntype"}}],[11,"from","","",18,{"inputs":[{"name":"shortyfieldtype"}],"output":{"name":"shortyreturntype"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"shortyfieldtype"}}],[11,"from_char","","",19,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new prototype.",6,{"inputs":[{"name":"shortydescriptor"},{"name":"type"},{"name":"ta"}],"output":{"name":"prototype"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name_index","","Gets the index of the name string.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"type_index","","Gets the index of the type of the annotation.",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"elements","","Gets the elements of the annotation.",9,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visibility","","Gets the visibility of the annotation item.",10,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"encodedannotation"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new annotations directory.",11,{"inputs":[{"name":"ca"},{"name":"box"},{"name":"box"},{"name":"box"}],"output":{"name":"annotationsdirectory"}}],[11,"class_annotations","","Gets the list of class annotations.",11,null],[11,"field_annotations","","Gets the list of field annotations.",11,null],[11,"method_annotations","","Gets the list of method annotations.",11,null],[11,"parameter_annotations","","Gets the list of parameter annotations.",11,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new list of field annotations.",12,{"inputs":[{"name":"u32"},{"name":"box"}],"output":{"name":"fieldannotations"}}],[11,"field_index","","Gets the index of the annotated field.",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"annotations","","Gets the list of annotations.",12,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new list of method annotations.",13,{"inputs":[{"name":"u32"},{"name":"box"}],"output":{"name":"methodannotations"}}],[11,"method_index","","Gets the index of the annotated method.",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"annotations","","Gets the list of annotations.",13,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new list of method annotations.",14,{"inputs":[{"name":"u32"},{"name":"box"}],"output":{"name":"parameterannotations"}}],[11,"method_index","","Gets the index of the annotated method.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"annotations","","Gets the list of annotations.",14,null],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"assert_receiver_is_total_eq","","",15,null],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"accessflags"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"ordering"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",15,{"inputs":[],"output":{"name":"accessflags"}}],[11,"all","","Returns the set containing all flags.",15,{"inputs":[],"output":{"name":"accessflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",15,{"inputs":[{"name":"u32"}],"output":{"name":"accessflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",15,{"inputs":[{"name":"self"},{"name":"accessflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"accessflags"}}],[11,"bitor_assign","","Adds the set of flags.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"accessflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"accessflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":{"name":"accessflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",15,{"inputs":[{"name":"self"},{"name":"accessflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",15,{"inputs":[{"name":"self"}],"output":{"name":"accessflags"}}],[11,"extend","","",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",15,{"inputs":[{"name":"t"}],"output":{"name":"accessflags"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new class.",16,{"inputs":[{"name":"u32"},{"name":"accessflags"},{"name":"option"},{"name":"box"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"class"}}],[11,"class_index","","Gets the index of the class in the type IDs list.",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"access_flags","","Gets the access flags of the class.",16,{"inputs":[{"name":"self"}],"output":{"name":"accessflags"}}],[11,"superclass_index","","Gets the index in the type IDs list of the superclass for this class, ifd it exists.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"interfaces","","Gets the list of interfaces implemented by the class.",16,null],[11,"source_file_index","","Gets the index of the source file in the string list if it's known.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"annotations","","Gets the annotations for the class, if there are any.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"class_data","","Gets the data associated with the class.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"static_values","","Gets the arrays with the values for the static files in this class.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"sizes","dalvik","",null,null],[17,"HEADER_SIZE","dalvik::sizes","",null,null],[17,"STRING_ID_ITEM_SIZE","","",null,null],[17,"TYPE_ID_ITEM_SIZE","","",null,null],[17,"PROTO_ID_ITEM_SIZE","","",null,null],[17,"FIELD_ID_ITEM_SIZE","","",null,null],[17,"METHOD_ID_ITEM_SIZE","","",null,null],[17,"CLASS_DEF_ITEM_SIZE","","",null,null],[0,"read","dalvik","Dex file reader module.",null,null],[3,"DexReader","dalvik::read","Structure for reading a Dex file in a fast way.",null,null],[12,"file_cursor","","Reader to use to read data.",40,null],[12,"header","","Header of the dex file.",40,null],[12,"strings","","String list.",40,null],[12,"types","","Type list.",40,null],[12,"prototypes","","Prototype ID list.",40,null],[12,"field_ids","","Field ID list.",40,null],[12,"method_ids","","Method ID list.",40,null],[12,"classes","","List of classes.",40,null],[12,"annotation_set_ref_list","","List of lists of references to annotation set offsets.",40,null],[12,"annotation_sets","","Set of annotations.",40,null],[12,"code_segments","","Code segment list.",40,null],[12,"debug_info","","Debug information list.",40,null],[12,"arrays","","Array list.",40,null],[12,"annotations_directories","","Annotations directories.",40,null],[5,"read_uleb128","","Reads a uleb128 from a reader.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"read_uleb128p1","","Reads a uleb128p1 from a reader.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"read_sleb128","","Reads a sleb128 from a reader.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new reader with the information from the header of the file.",40,{"inputs":[{"name":"r"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_data","","Reads data from a whole file and stores its information.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_endian_data","","Reads the data in the correct endianness.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_string_list","","Reads the list of strings.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_string","","Reads an actual string.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_all_types","","Reads the list of types.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_prototype_list","","Reads the list of prototype IDs.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_type_list","","Reads a list of types.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_field_id_list","","Reads the list of field IDs.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_method_id_list","","Reads the list of method IDs.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_class_list","","Reads the list of classes.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_annotations_directory","","Reads an annotations directory.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_annotation_set","","Reads an annotation set.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read_annotation","","Reads an annotation.",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","dalvik","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_file","","Reads the Dex data structure from the given path.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_reader","","Loads a new Dex data structure from the given reader.",0,{"inputs":[{"name":"r"},{"name":"option"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"dexreader"}],"output":{"name":"dex"}}]],"paths":[[3,"Dex"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"Header"],[3,"ShortyDescriptor"],[3,"Prototype"],[3,"Array"],[3,"AnnotationElement"],[3,"EncodedAnnotation"],[3,"Annotation"],[3,"AnnotationsDirectory"],[3,"FieldAnnotations"],[3,"MethodAnnotations"],[3,"ParameterAnnotations"],[3,"AccessFlags"],[3,"Class"],[4,"Type"],[4,"ShortyReturnType"],[4,"ShortyFieldType"],[4,"Visibility"],[4,"Value"],[3,"PrototypeIdData"],[3,"FieldIdData"],[3,"MethodIdData"],[3,"ClassDefData"],[3,"FieldAnnotationsOffset"],[3,"MethodAnnotationsOffset"],[3,"ParameterAnnotationsOffset"],[3,"AnnotationsDirectoryOffsets"],[3,"Field"],[3,"Method"],[3,"ClassData"],[3,"DebugInfo"],[3,"DebugBytecode"],[3,"CodeItem"],[3,"TryItem"],[3,"CatchHandler"],[3,"HandlerInfo"],[4,"DebugInstruction"],[3,"DexReader"]]};
initSearch(searchIndex);
